name: Release Package
on:
  push:
    branches: [main]
jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      version-changed: ${{ steps.check.outputs.changed }}
      current-version: ${{ steps.check.outputs.current-version }}
      previous-version: ${{ steps.check.outputs.previous-version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Check if version changed
        id: check
        run: |
          current_version=$(jq -r '.version' package.json)
          previous_version=$(git show HEAD~1:package.json | jq -r '.version')

          echo "current-version=$current_version" >> $GITHUB_OUTPUT
          echo "previous-version=$previous_version" >> $GITHUB_OUTPUT

          if [ "$current_version" != "$previous_version" ]; then
            echo "Version changed from $previous_version to $current_version"
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "Version unchanged: $current_version"
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

  build-and-publish:
    runs-on: ubuntu-latest
    needs: check-version
    if: needs.check-version.outputs.version-changed == 'true'
    permissions:
      contents: read
      id-token: write
    outputs:
      published-version: ${{ needs.check-version.outputs.current-version }}
    steps:
      - uses: actions/checkout@v4
      # Setup .npmrc file to publish to npm
      - uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          registry-url: "https://registry.npmjs.org"
      - run: npm ci
      - run: npm run build
      - run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  create-release:
    runs-on: ubuntu-latest
    needs: [check-version, build-and-publish]
    if: needs.build-and-publish.result == 'success'
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.check-version.outputs.current-version }}
          release_name: v${{ needs.check-version.outputs.current-version }}
          body: |
            See [CHANGELOG](https://github.com/reforgehq/sdk-node/blob/main/CHANGELOG.md) for details.

            Published to npm: [@reforge-com/node@${{ needs.check-version.outputs.current-version }}](https://www.npmjs.com/package/@reforge-com/node/v/${{ needs.check-version.outputs.current-version }})
          draft: false
          prerelease: false
